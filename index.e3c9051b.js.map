{"mappings":"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","sources":["data/testfile.js","js/s1.js"],"sourcesContent":["export const test_var_headers = ['canton', 'buildings_total', 'single_family_home', 'inhabitants', 'region'];\nexport const test_var = [[\"AG\",153894,102206,703086.0,\"Northwestern Switzerland\"],[\"AI\",5299,2917,16360.0,\"Eastern Switzerland\"],[\"AR\",16323,9251,55585.0,\"Eastern Switzerland\"],[\"BE\",238111,114053,1047473.0,\"Espace Midland\"],[\"BL\",67390,46632,292817.0,\"Northwestern Switzerland\"],[\"BS\",23709,9289,196036.0,\"Northwestern Switzerland\"],[\"FR\",73439,44311,329809.0,\"Espace Midland\"],[\"GE\",44932,25988,509448.0,\"Lake Geneva Region\"],[\"GL\",13965,10022,41190.0,\"Eastern Switzerland\"],[\"GR\",71340,35198,201376.0,\"Eastern Switzerland\"],[\"JU\",23324,15664,73798.0,\"Espace Midland\"],[\"LU\",70035,32143,420326.0,\"Central Switzerland\"],[\"NE\",31387,14576,176166.0,\"Espace Midland\"],[\"NW\",7960,2686,43894.0,\"Central Switzerland\"],[\"OW\",9478,4101,38435.0,\"Central Switzerland\"],[\"SG\",114355,68051,519245.0,\"Eastern Switzerland\"],[\"SH\",19349,11839,83995.0,\"Eastern Switzerland\"],[\"SO\",70176,46893,280245.0,\"Espace Midland\"],[\"SZ\",32152,15775,163689.0,\"Central Switzerland\"],[\"TG\",66339,40912,285964.0,\"Eastern Switzerland\"],[\"TI\",113368,76348,352181.0,\"Ticino\"],[\"UR\",10102,4880,37047.0,\"Central Switzerland\"],[\"VD\",137083,75678,822968.0,\"Lake Geneva Region\"],[\"VS\",116889,72454,353209.0,\"Lake Geneva Region\"],[\"ZG\",16421,6603,129787.0,\"Central Switzerland\"],[\"ZH\",227341,118612,1564662.0,\"Zurich\"]];","import { test_var_headers, test_var } from \"../data/testfile.js\";\n\n// ------------------- Data Preparation -------------------\nvar easter_swiss = test_var.filter((item) => item[4] == \"Eastern Switzerland\");\nvar espace_midland = test_var.filter((item) => item[4] == \"Espace Midland\");\nvar northwest_swiss = test_var.filter(\n    (item) => item[4] == \"Northwestern Switzerland\"\n);\nvar lake_geneva = test_var.filter((item) => item[4] == \"Lake Geneva Region\");\nvar central_swiss = test_var.filter((item) => item[4] == \"Central Switzerland\");\nvar ticino = test_var.filter((item) => item[4] == \"Ticino\");\nvar zurich = test_var.filter((item) => item[4] == \"Zurich\");\n\n// ------------------- Chart Preparation -------------------\nvar options = {\n    chart: {\n        type: \"scatter\",\n        height: \"100%\",\n        width: \"100%\",\n        toolbar: {\n            show: true,\n        },\n    },\n    grid: {\n        show: true,\n        xaxis: {\n            lines: {\n                show: true,\n            },\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n    },\n    series: [\n        {\n            name: \"Eastern Switzerland\",\n            data: easter_swiss.map((x) => [\n                x[3],\n                ((x[2] / x[1]) * 100).toFixed(2),\n            ]),\n        },\n        {\n            name: \"Espace Midland\",\n            data: espace_midland.map((x) => [\n                x[3],\n                ((x[2] / x[1]) * 100).toFixed(2),\n            ]),\n        },\n        {\n            name: \"Northwestern Switzerland\",\n            data: northwest_swiss.map((x) => [\n                x[3],\n                ((x[2] / x[1]) * 100).toFixed(2),\n            ]),\n        },\n        {\n            name: \"Lake Geneva Region\",\n            data: lake_geneva.map((x) => [\n                x[3],\n                ((x[2] / x[1]) * 100).toFixed(2),\n            ]),\n        },\n        {\n            name: \"Central Switzerland\",\n            data: central_swiss.map((x) => [\n                x[3],\n                ((x[2] / x[1]) * 100).toFixed(2),\n            ]),\n        },\n        {\n            name: \"Ticino\",\n            data: ticino.map((x) => [x[3], ((x[2] / x[1]) * 100).toFixed(2)]),\n        },\n        {\n            name: \"Zurich\",\n            data: zurich.map((x) => [x[3], ((x[2] / x[1]) * 100).toFixed(2)]),\n        },\n    ],\n    yaxis: {\n        min: 30,\n        max: 80,\n        tickAmount: 5,\n    },\n    xaxis: {\n        min: 1600,\n        max: 1580000,\n        tickAmount: 10,\n    },\n    legend: {\n        position: \"right\",\n        horizontalAlign: \"center\",\n        floating: true,\n        offsetY: 10,\n        offsetX: 5,\n    },\n    tooltip: {\n        enabled: true,\n        x: {\n            show: true,\n            formatter: (val) => {\n                return val + \" Inhabitants\";\n            },\n        },\n        y: {\n            show: true,\n            formatter: function (val) {\n                return val + \"%\";\n            },\n        },\n    },\n};\n\n// ------------------- Chart Generation -------------------\nvar chart = new ApexCharts(document.querySelector(\"#s1-chart\"), options);\nchart.render();\n"],"names":["$ce19c96ec0f8838c$export$28049fd6ee4f394b","$b1b0145041347152$var$easter_swiss","filter","item","$b1b0145041347152$var$espace_midland","$b1b0145041347152$var$northwest_swiss","$b1b0145041347152$var$lake_geneva","$b1b0145041347152$var$central_swiss","$b1b0145041347152$var$ticino","$b1b0145041347152$var$zurich","$b1b0145041347152$var$options","chart","type","height","width","toolbar","show","grid","xaxis","lines","yaxis","series","name","data","map","x","toFixed","min","max","tickAmount","legend","position","horizontalAlign","floating","offsetY","offsetX","tooltip","enabled","formatter","val","y","ApexCharts","document","querySelector","render"],"version":3,"file":"index.e3c9051b.js.map"}